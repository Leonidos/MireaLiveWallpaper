com.badlogic.gdx.Application -> com.badlogic.gdx.c:
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.d:
    void create() -> a
    void resume() -> b
    void render() -> c
    void resize$255f295() -> d
com.badlogic.gdx.Audio -> com.badlogic.gdx.a:
com.badlogic.gdx.Files -> com.badlogic.gdx.j:
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> a
    java.lang.String getExternalStoragePath() -> a
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.b:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType[] $VALUES -> e
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Gdx -> com.badlogic.gdx.e:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.graphics.GLCommon gl -> f
    com.badlogic.gdx.graphics.GL10 gl10 -> g
    com.badlogic.gdx.graphics.GL11 gl11 -> h
    com.badlogic.gdx.graphics.GL20 gl20 -> i
    com.badlogic.gdx.graphics.GLU glu -> j
com.badlogic.gdx.Graphics -> com.badlogic.gdx.f:
    boolean isGL20Available() -> f
    com.badlogic.gdx.graphics.GL10 getGL10() -> a
    com.badlogic.gdx.graphics.GL11 getGL11() -> b
    com.badlogic.gdx.graphics.GL20 getGL20() -> c
    int getWidth() -> e
    int getHeight() -> d
    float getDeltaTime() -> g
com.badlogic.gdx.Input -> com.badlogic.gdx.g:
    float getAccelerometerX() -> a
    float getAccelerometerY() -> b
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.i:
com.badlogic.gdx.Version -> com.badlogic.gdx.h:
    java.lang.String VERSION -> a
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> e
    com.badlogic.gdx.backends.android.AndroidInput input -> a
    com.badlogic.gdx.backends.android.AndroidAudio audio -> b
    com.badlogic.gdx.backends.android.AndroidFiles files -> f
    com.badlogic.gdx.ApplicationListener listener -> c
    boolean firstResume -> g
    java.util.List runnables -> d
    android.os.PowerManager$WakeLock wakeLock -> h
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.b:
    boolean useGL20 -> a
    boolean useAccelerometer -> b
    boolean useCompass -> c
    int touchSleepTime -> d
    boolean useWakelock -> f
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> e
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.g:
    android.media.SoundPool soundPool -> b
    java.util.List musics -> a
    java.util.List wasPlaying -> c
    void pause() -> a
    void resume() -> b
    void dispose() -> c
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.j:
    android.content.res.AssetManager assets -> c
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> a
    com.badlogic.gdx.files.FileHandle parent() -> b
    java.io.InputStream read() -> a
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.f:
    java.lang.String sdcard -> a
    android.content.res.AssetManager assets -> b
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> a
    java.lang.String getExternalStoragePath() -> a
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.d:
    javax.microedition.khronos.opengles.GL10 gl -> a
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClientActiveTexture(int) -> a
    void glColor4f(float,float,float,float) -> a
    void glColorPointer(int,int,int,java.nio.Buffer) -> a
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> b
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> c
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glMatrixMode(int) -> d
    void glNormalPointer$4dfa77fc(int,java.nio.Buffer) -> a
    void glPopMatrix() -> a
    void glPushMatrix() -> b
    void glTexCoordPointer$5efd7755(int,int,java.nio.Buffer) -> b
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTranslatef$483d242b(float,float) -> a
    void glVertexPointer$5efd7755(int,int,java.nio.Buffer) -> c
    void glViewport(int,int,int,int) -> glViewport
    void glLoadMatrixf$49651d03(float[]) -> a
    void glMultMatrixf$49651d03(float[]) -> b
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.e:
    javax.microedition.khronos.opengles.GL11 gl -> a
    void glBindBuffer(int,int) -> a
    void glBufferData(int,int,java.nio.Buffer,int) -> a
    void glBufferSubData$5efd7755(int,int,java.nio.Buffer) -> a
    void glGenBuffers$63f29576(java.nio.IntBuffer) -> a
    void glColorPointer(int,int,int,int) -> a
    void glNormalPointer$4868d30e(int,int) -> b
    void glTexCoordPointer$3b4dfe4b(int,int,int) -> a
    void glVertexPointer$3b4dfe4b(int,int,int) -> b
    void glDrawElements$3b4dfe4b$4868d30e(int,int) -> c
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glUniform1i(int,int) -> glUniform1i
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGLU -> com.badlogic.gdx.backends.android.h:
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.i:
    android.view.View view -> a
    int width -> h
    int height -> i
    com.badlogic.gdx.backends.android.AndroidApplication app -> b
    com.badlogic.gdx.graphics.GLCommon gl -> j
    com.badlogic.gdx.graphics.GL10 gl10 -> k
    com.badlogic.gdx.graphics.GL11 gl11 -> l
    com.badlogic.gdx.graphics.GL20 gl20 -> m
    com.badlogic.gdx.graphics.GLU glu -> n
    long lastFrameTime -> o
    float deltaTime -> p
    long frameStart -> q
    int frames -> r
    int fps -> s
    com.badlogic.gdx.math.WindowedMean mean -> t
    boolean created -> u
    boolean running -> c
    boolean pause -> d
    boolean resume -> e
    boolean destroy -> f
    float ppiX -> v
    float ppiY -> w
    float ppcX -> x
    float ppcY -> y
    int[] value -> z
    java.lang.Object synch -> g
    void updatePpi() -> h
    com.badlogic.gdx.graphics.GL10 getGL10() -> a
    com.badlogic.gdx.graphics.GL11 getGL11() -> b
    com.badlogic.gdx.graphics.GL20 getGL20() -> c
    int getHeight() -> d
    int getWidth() -> e
    boolean isGL20Available() -> f
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    int getAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> g
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.k:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> b
    com.badlogic.gdx.utils.Pool usedTouchEvents -> c
    java.util.ArrayList keyEvents -> d
    java.util.ArrayList touchEvents -> e
    java.util.HashSet keys -> f
    android.hardware.SensorManager manager -> g
    boolean accelerometerAvailable -> h
    float[] accelerometerValues -> i
    com.badlogic.gdx.backends.android.AndroidApplication app -> j
    int sleepTime -> k
    boolean catchBack -> l
    boolean compassAvailable -> m
    boolean keyboardAvailable -> a
    float[] magneticFieldValues -> n
    boolean justTouched -> o
    com.badlogic.gdx.InputProcessor processor -> p
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> q
    boolean requestFocus -> r
    float getAccelerometerX() -> a
    float getAccelerometerY() -> b
    void processEvents() -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void registerSensorListeners() -> d
    void unregisterSensorListeners() -> e
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.a:
    int type -> a
    int keyCode -> b
    char keyChar -> c
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.c:
    int type -> a
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.l:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> a
    android.media.MediaPlayer player -> b
    boolean isPrepared -> c
    void dispose() -> a
    boolean isPlaying() -> b
    void pause() -> c
    void play() -> d
com.badlogic.gdx.backends.android.livewallpaper.AndroidApplicationLW -> com.badlogic.gdx.backends.android.a.e:
    android.service.wallpaper.WallpaperService service -> c
    android.service.wallpaper.WallpaperService$Engine engine -> d
    com.badlogic.gdx.backends.android.livewallpaper.AndroidGraphicsLW graphics -> e
    com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW input -> a
    com.badlogic.gdx.backends.android.livewallpaper.AndroidAudioLW audio -> f
    com.badlogic.gdx.backends.android.AndroidFiles files -> g
    com.badlogic.gdx.ApplicationListener listener -> h
    android.os.Handler handler -> i
    java.util.List runnables -> b
    boolean firstResume -> j
    void initialize$34c33098(com.badlogic.gdx.ApplicationListener) -> a
    void onPause() -> a
    void onResume() -> b
    void onDestroy() -> c
    com.badlogic.gdx.Graphics getGraphics() -> d
    com.badlogic.gdx.Input getInput() -> e
    android.service.wallpaper.WallpaperService getService() -> f
    android.service.wallpaper.WallpaperService$Engine getEngine() -> g
    com.badlogic.gdx.ApplicationListener getListener() -> h
com.badlogic.gdx.backends.android.livewallpaper.AndroidAudioLW -> com.badlogic.gdx.backends.android.a.l:
    android.media.SoundPool soundPool -> a
    android.media.AudioManager manager -> b
    java.util.List musics -> c
    java.util.List wasPlaying -> d
    void pause() -> a
    void resume() -> b
    void dispose() -> c
com.badlogic.gdx.backends.android.livewallpaper.AndroidGL10 -> com.badlogic.gdx.backends.android.a.c:
    javax.microedition.khronos.opengles.GL10 gl -> a
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClientActiveTexture(int) -> a
    void glColor4f(float,float,float,float) -> a
    void glColorPointer(int,int,int,java.nio.Buffer) -> a
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> b
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> c
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glMatrixMode(int) -> d
    void glNormalPointer$4dfa77fc(int,java.nio.Buffer) -> a
    void glPopMatrix() -> a
    void glPushMatrix() -> b
    void glTexCoordPointer$5efd7755(int,int,java.nio.Buffer) -> b
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTranslatef$483d242b(float,float) -> a
    void glVertexPointer$5efd7755(int,int,java.nio.Buffer) -> c
    void glViewport(int,int,int,int) -> glViewport
    void glLoadMatrixf$49651d03(float[]) -> a
    void glMultMatrixf$49651d03(float[]) -> b
com.badlogic.gdx.backends.android.livewallpaper.AndroidGL11 -> com.badlogic.gdx.backends.android.a.b:
    javax.microedition.khronos.opengles.GL11 gl -> a
    void glBindBuffer(int,int) -> a
    void glBufferData(int,int,java.nio.Buffer,int) -> a
    void glBufferSubData$5efd7755(int,int,java.nio.Buffer) -> a
    void glGenBuffers$63f29576(java.nio.IntBuffer) -> a
    void glColorPointer(int,int,int,int) -> a
    void glNormalPointer$4868d30e(int,int) -> b
    void glTexCoordPointer$3b4dfe4b(int,int,int) -> a
    void glVertexPointer$3b4dfe4b(int,int,int) -> b
    void glDrawElements$3b4dfe4b$4868d30e(int,int) -> c
com.badlogic.gdx.backends.android.livewallpaper.AndroidGraphicsLW -> com.badlogic.gdx.backends.android.a.d:
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView view -> e
    int width -> f
    int height -> g
    com.badlogic.gdx.backends.android.livewallpaper.AndroidApplicationLW app -> h
    com.badlogic.gdx.graphics.GLCommon gl -> i
    com.badlogic.gdx.graphics.GL10 gl10 -> j
    com.badlogic.gdx.graphics.GL11 gl11 -> k
    com.badlogic.gdx.graphics.GL20 gl20 -> l
    com.badlogic.gdx.graphics.GLU glu -> m
    long lastFrameTime -> n
    float deltaTime -> o
    long frameStart -> p
    int frames -> q
    int fps -> r
    com.badlogic.gdx.math.WindowedMean mean -> s
    boolean created -> t
    boolean running -> a
    boolean pause -> b
    boolean resume -> c
    boolean destroy -> u
    float ppiX -> v
    float ppiY -> w
    float ppcX -> x
    float ppcY -> y
    int[] value -> z
    java.lang.Object synch -> d
    void updatePpi() -> i
    boolean checkGL20() -> j
    com.badlogic.gdx.graphics.GL10 getGL10() -> a
    com.badlogic.gdx.graphics.GL11 getGL11() -> b
    com.badlogic.gdx.graphics.GL20 getGL20() -> c
    int getHeight() -> d
    int getWidth() -> e
    boolean isGL20Available() -> f
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    int getAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> g
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView getView() -> h
com.badlogic.gdx.backends.android.livewallpaper.AndroidGraphicsLW$1 -> com.badlogic.gdx.backends.android.a.f:
    com.badlogic.gdx.backends.android.livewallpaper.AndroidGraphicsLW this$0 -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW -> com.badlogic.gdx.backends.android.a.h:
    com.badlogic.gdx.utils.Pool usedTouchEvents -> a
    java.util.ArrayList touchEvents -> b
    int[] touchX -> c
    int[] touchY -> d
    boolean[] touched -> e
    int[] realId -> f
    android.hardware.SensorManager manager -> g
    boolean accelerometerAvailable -> h
    float[] accelerometerValues -> i
    com.badlogic.gdx.backends.android.livewallpaper.AndroidApplicationLW app -> j
    com.badlogic.gdx.backends.android.livewallpaper.AndroidTouchHandlerLW touchHandler -> k
    int sleepTime -> l
    boolean catchBack -> m
    android.os.Vibrator vibrator -> n
    boolean compassAvailable -> o
    float[] magneticFieldValues -> p
    float azimuth -> q
    float pitch -> r
    float roll -> s
    boolean justTouched -> t
    com.badlogic.gdx.InputProcessor processor -> u
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> v
    boolean requestFocus -> w
    float[] R -> x
    float[] orientation -> y
    float getAccelerometerX() -> a
    float getAccelerometerY() -> b
    void processEvents() -> c
    boolean onTap(int,int) -> a
    boolean onDrop(int,int) -> b
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void registerSensorListeners() -> d
    void unregisterSensorListeners() -> e
com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW$1 -> com.badlogic.gdx.backends.android.a.k:
    com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW this$0 -> a
    java.lang.Object newObject() -> a
com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW$TouchEvent -> com.badlogic.gdx.backends.android.a.j:
    long timeStamp -> a
    int type -> b
    int x -> c
    int y -> d
    int pointer -> e
    com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW this$0 -> f
com.badlogic.gdx.backends.android.livewallpaper.AndroidMusicLW -> com.badlogic.gdx.backends.android.a.a:
    android.media.MediaPlayer player -> a
    boolean isPrepared -> b
    boolean isPlaying() -> a
    void pause() -> b
    void play() -> c
com.badlogic.gdx.backends.android.livewallpaper.AndroidSingleTouchHandlerLW -> com.badlogic.gdx.backends.android.a.m:
    void onTap(int,int,com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW) -> a
    void onDrop(int,int,com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW) -> b
    void postTouchEvent$57c0df4f(com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW,int,int,int) -> a
com.badlogic.gdx.backends.android.livewallpaper.AndroidTouchHandlerLW -> com.badlogic.gdx.backends.android.a.i:
    void onTap(int,int,com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW) -> a
    void onDrop(int,int,com.badlogic.gdx.backends.android.livewallpaper.AndroidInputLW) -> b
com.badlogic.gdx.backends.android.livewallpaper.InputProcessorLW -> com.badlogic.gdx.backends.android.a.g:
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.DefaultGLSurfaceView -> com.badlogic.gdx.backends.android.a.a.o:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> h
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.a.a.m:
    java.lang.String TAG -> h
    android.service.wallpaper.WallpaperService$Engine engine -> i
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> a
    boolean mSizeChanged -> b
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> j
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> c
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> d
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> e
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> f
    int mDebugFlags -> g
    android.view.SurfaceHolder getHolder() -> a
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> a
    void setEGLContextFactory(com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLSurfaceView20$ContextFactory) -> a
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> b
    void onResume() -> c
    void onDestroy() -> d
    void checkRenderThreadState() -> e
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.a.a.k:
    int[] mConfigSpec -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.a.a.q:
    int[] mValue -> d
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> e
    int mDepthSize -> f
    int mStencilSize -> g
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.a.a.i:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.a.a.l:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.a.a.f:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.a.a.n:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.a.a.p:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView this$0 -> f
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> a
    void throwEglException(java.lang.String) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.a.a.h:
    boolean mShouldExit -> b
    boolean mExited -> a
    boolean mPaused -> c
    boolean mHasSurface -> d
    boolean mWaitingForSurface -> e
    boolean mHaveEgl -> f
    int mWidth -> g
    int mHeight -> h
    int mRenderMode -> i
    boolean mRequestRender -> j
    boolean mRenderComplete -> k
    java.util.ArrayList mEventQueue -> l
    android.opengl.GLSurfaceView$Renderer mRenderer -> m
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> n
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView this$0 -> o
    void run() -> run
    void stopEglLocked() -> f
    void guardedRun() -> g
    void surfaceCreated() -> a
    void surfaceDestroyed() -> b
    void onPause() -> c
    void onResume() -> d
    void onWindowResize(int,int) -> a
    void requestExitAndWait() -> e
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.a.a.j:
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> a
    void threadExiting(com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThread) -> a
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThread) -> b
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLThread) -> c
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.a.a.a:
    javax.microedition.khronos.opengles.GL wrap$40ce139f() -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.a.a.g:
    java.lang.StringBuilder mBuilder -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.a.a.c:
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.a.a.e:
    java.lang.String TAG -> h
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> i
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.a.a.b:
    int EGL_OPENGL_ES2_BIT -> a
    int[] s_configAttribs2 -> b
    int mRedSize -> c
    int mGreenSize -> d
    int mBlueSize -> e
    int mAlphaSize -> f
    int mDepthSize -> g
    int mStencilSize -> h
    int[] mValue -> i
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.a.a.d:
    int EGL_CONTEXT_CLIENT_VERSION -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.s:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> a
    boolean mSizeChanged -> b
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> h
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> c
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> d
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> e
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> f
    int mDebugFlags -> g
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.m:
    int[] mConfigSpec -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.i:
    int[] mValue -> d
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> e
    int mDepthSize -> f
    int mStencilSize -> g
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.e:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.w:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.z:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.a:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.d:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> f
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> a
    void throwEglException(java.lang.String) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.aa:
    boolean mShouldExit -> b
    boolean mExited -> a
    boolean mPaused -> c
    boolean mHasSurface -> d
    boolean mWaitingForSurface -> e
    boolean mHaveEgl -> f
    int mWidth -> g
    int mHeight -> h
    int mRenderMode -> i
    boolean mRequestRender -> j
    boolean mRenderComplete -> k
    java.util.ArrayList mEventQueue -> l
    android.opengl.GLSurfaceView$Renderer mRenderer -> m
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> n
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> o
    void run() -> run
    void stopEglLocked() -> h
    void guardedRun() -> i
    void setRenderMode(int) -> a
    int getRenderMode() -> a
    void requestRender() -> b
    void surfaceCreated() -> c
    void surfaceDestroyed() -> d
    void onPause() -> e
    void onResume() -> f
    void onWindowResize(int,int) -> a
    void requestExitAndWait() -> g
    void queueEvent(java.lang.Runnable) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.p:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> a
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> a
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> b
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> c
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.q:
    javax.microedition.khronos.opengles.GL wrap$40ce139f() -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.r:
    java.lang.StringBuilder mBuilder -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.f:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.h:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> a
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.ab:
    boolean mCheckError -> e
    boolean mCheckThread -> f
    java.lang.Thread mOurThread -> g
    void checkThread() -> a
    void checkError() -> b
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.u:
    int mError -> a
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.y:
    java.io.Writer mLog -> e
    boolean mLogArgumentNames -> f
    int mArgCount -> g
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> h
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> i
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> j
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> k
    boolean mColorArrayEnabled -> l
    boolean mNormalArrayEnabled -> m
    boolean mTextureCoordArrayEnabled -> n
    boolean mVertexArrayEnabled -> o
    java.lang.StringBuilder mStringBuilder -> p
    void checkError() -> a
    void log(java.lang.String) -> a
    void begin(java.lang.String) -> b
    void arg(java.lang.String,java.lang.String) -> a
    void end() -> b
    void flush() -> c
    void arg(java.lang.String,boolean) -> a
    void arg(java.lang.String,int) -> a
    void arg(java.lang.String,float) -> a
    void returns(java.lang.String) -> c
    void arg(java.lang.String,int,int[],int) -> a
    void arg(java.lang.String,int,float[],int) -> a
    void formattedAppend(java.lang.StringBuilder,int,int) -> a
    java.lang.String toString(int,int,int[],int) -> a
    java.lang.String toString(int,int,java.nio.IntBuffer) -> a
    void arg(java.lang.String,int,java.nio.FloatBuffer) -> a
    void arg(java.lang.String,int,java.nio.IntBuffer) -> a
    void argPointer(int,int,int,java.nio.Buffer) -> a
    java.lang.String getHex(int) -> a
    java.lang.String getFactor(int) -> b
    java.lang.String getTextureTarget(int) -> c
    java.lang.String getTextureEnvTarget(int) -> d
    java.lang.String getTextureEnvPName(int) -> e
    int getTextureEnvParamCount(int) -> f
    java.lang.String getClientState(int) -> g
    java.lang.String getCap(int) -> h
    java.lang.String getTexturePName(int) -> i
    java.lang.String getFogPName(int) -> j
    int getFogParamCount(int) -> k
    java.lang.String getIntegerStateName(int) -> l
    int getIntegerStateSize(int) -> m
    int getIntegerStateFormat(int) -> n
    java.lang.String getFaceName(int) -> o
    java.lang.String getMaterialPName(int) -> p
    int getMaterialParamCount(int) -> q
    java.lang.String getLightName(int) -> r
    java.lang.String getLightPName(int) -> s
    int getLightParamCount(int) -> t
    java.lang.String getLightModelPName(int) -> u
    int getLightModelParamCount(int) -> v
    java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> a
    void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> a
    void doElement(java.lang.StringBuilder,int,int) -> b
    void startLogIndices() -> d
    void endLogIndices() -> e
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.k:
    int mSize -> a
    int mType -> b
    int mStride -> c
    java.nio.Buffer mPointer -> e
    java.nio.ByteBuffer mTempByteBuffer -> d
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> f
    int sizeof(int) -> a
    void bindByteBuffer() -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.x:
    java.lang.String TAG -> a
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> b
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.g:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> d
    java.util.concurrent.Semaphore sEglSemaphore -> a
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> e
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> b
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> c
    int mRenderMode -> f
    android.opengl.GLSurfaceView$Renderer mRenderer -> g
    int mSurfaceWidth -> h
    int mSurfaceHeight -> i
    boolean mHasSurface -> j
    void onMeasure(int,int) -> onMeasure
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> a
    void onResume() -> b
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.ac:
    int[] mConfigSpec -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.j:
    int[] mValue -> d
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> e
    int mDepthSize -> f
    int mStencilSize -> g
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.v:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> f
    void start() -> a
    void finish() -> b
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.n:
    boolean mDone -> a
    boolean mPaused -> b
    boolean mHasSurface -> c
    int mWidth -> d
    int mHeight -> e
    int mRenderMode -> f
    boolean mRequestRender -> g
    android.opengl.GLSurfaceView$Renderer mRenderer -> h
    java.util.ArrayList mEventQueue -> i
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> j
    boolean mSizeChanged -> k
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> l
    void run() -> run
    void setRenderMode(int) -> a
    void surfaceCreated() -> a
    void surfaceDestroyed() -> b
    void onPause() -> c
    void onResume() -> d
    void onWindowResize(int,int) -> a
    void requestExitAndWait() -> e
    java.lang.Runnable getEvent() -> f
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.o:
    javax.microedition.khronos.opengles.GL wrap$40ce139f() -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.t:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.c:
    javax.microedition.khronos.opengles.GL10 mgl -> a
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> b
    javax.microedition.khronos.opengles.GL11 mgl11 -> c
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> d
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> e
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.b:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.l:
    int width -> a
    int height -> b
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.a.a:
    java.io.File file -> a
    com.badlogic.gdx.Files$FileType type -> b
    java.io.File file() -> c
    java.io.InputStream read() -> a
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> a
    com.badlogic.gdx.files.FileHandle parent() -> b
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.n:
    com.badlogic.gdx.graphics.Color WHITE -> a
    com.badlogic.gdx.graphics.Color BLACK -> b
    com.badlogic.gdx.graphics.Color RED -> c
    com.badlogic.gdx.graphics.Color GREEN -> d
    com.badlogic.gdx.graphics.Color BLUE -> e
    float r -> f
    float g -> g
    float b -> h
    float a -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    float toFloatBits() -> a
    int rgba8888$40983718(float) -> a
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.d:
    void glClientActiveTexture(int) -> a
    void glColor4f(float,float,float,float) -> a
    void glColorPointer(int,int,int,java.nio.Buffer) -> a
    void glDisableClientState(int) -> b
    void glEnableClientState(int) -> c
    void glLoadMatrixf$49651d03(float[]) -> a
    void glMatrixMode(int) -> d
    void glMultMatrixf$49651d03(float[]) -> b
    void glNormalPointer$4dfa77fc(int,java.nio.Buffer) -> a
    void glPopMatrix() -> a
    void glPushMatrix() -> b
    void glTexCoordPointer$5efd7755(int,int,java.nio.Buffer) -> b
    void glTranslatef$483d242b(float,float) -> a
    void glVertexPointer$5efd7755(int,int,java.nio.Buffer) -> c
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.e:
    void glBindBuffer(int,int) -> a
    void glBufferData(int,int,java.nio.Buffer,int) -> a
    void glBufferSubData$5efd7755(int,int,java.nio.Buffer) -> a
    void glGenBuffers$63f29576(java.nio.IntBuffer) -> a
    void glVertexPointer$3b4dfe4b(int,int,int) -> b
    void glColorPointer(int,int,int,int) -> a
    void glNormalPointer$4868d30e(int,int) -> b
    void glTexCoordPointer$3b4dfe4b(int,int,int) -> a
    void glDrawElements$3b4dfe4b$4868d30e(int,int) -> c
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.c:
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glUniform1i(int,int) -> glUniform1i
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.h:
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.graphics.GLU -> com.badlogic.gdx.graphics.g:
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.i:
    java.util.Map meshes -> a
    boolean forceVBO -> b
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> c
    com.badlogic.gdx.graphics.glutils.IndexData indices -> d
    boolean autoBind -> e
    boolean isVertexArray -> f
    void setVertices(float[]) -> a
    void setVertices$1cc109a0(float[],int) -> a
    void setIndices(short[]) -> a
    void render$4868d30e(int,int) -> a
    void render$6e88a955(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> a
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    void clearAllMeshes(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> a
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.l:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> d
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.o:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> a
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> b
    int color -> c
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    void setColor$4098370b(float) -> a
    void fill() -> a
    void drawLine$3b4dfe4b(int,int) -> a
    void drawPixmap$23690701(com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    void drawPixmap$12cb159f(com.badlogic.gdx.graphics.Pixmap,int,int,int,int) -> a
    int getWidth() -> b
    int getHeight() -> c
    void dispose() -> d
    void drawPixel$255f295(int) -> a
    int getGLFormat() -> e
    int getGLInternalFormat() -> f
    int getGLType() -> g
    java.nio.ByteBuffer getPixels() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> j
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.j:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.q:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> b
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.m:
    boolean enforcePotImages -> a
    java.nio.IntBuffer buffer -> b
    java.util.Map managedTextures -> c
    int width -> d
    int height -> e
    boolean isMipMap -> f
    boolean isManaged -> g
    int glHandle -> h
    com.badlogic.gdx.files.FileHandle file -> i
    com.badlogic.gdx.graphics.TextureData textureData -> j
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> k
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> l
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> m
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> n
    com.badlogic.gdx.graphics.Pixmap$Format format -> o
    int createGLHandle() -> g
    void uploadImageData(com.badlogic.gdx.graphics.Pixmap) -> a
    void bind() -> a
    int getWidth() -> b
    int getHeight() -> c
    void dispose() -> d
    int getTextureObjectHandle() -> e
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    int getTextureFilter(com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> a
    void clearAllTextures(com.badlogic.gdx.Application) -> a
    void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> f
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.b:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> h
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    boolean isMipMap(com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.f:
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> b
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.k:
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.p:
    int usage -> a
    int numComponents -> b
    int offset -> c
    java.lang.String alias -> d
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.a:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    int calculateOffsets() -> b
    void checkValidity() -> c
    int size() -> a
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> a
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    long basePtr -> a
    int width -> b
    int height -> c
    int format -> d
    java.nio.ByteBuffer pixelPtr -> e
    long[] nativeData -> f
    void dispose() -> a
    void clear(int) -> a
    void setPixel$4868d30e(int,int) -> a
    void drawLine$2e715812(int,int,int) -> a
    void drawPixmap$1d45ff80(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int) -> a
    void drawPixmap$1c4a40e0(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int) -> a
    java.nio.ByteBuffer load(long[],byte[],int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.nio.ByteBuffer getPixels() -> b
    int getHeight() -> c
    int getWidth() -> d
    int getFormat() -> e
    int getGLInternalFormat() -> f
    int getGLFormat() -> g
    int getGLType() -> h
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.c:
    float[] vertices -> a
    com.badlogic.gdx.graphics.Color color -> b
    float x -> c
    float y -> d
    float width -> e
    float height -> f
    float originX -> g
    float originY -> h
    float rotation -> i
    float scaleX -> o
    float scaleY -> p
    boolean dirty -> q
    com.badlogic.gdx.math.Rectangle bounds -> r
    void setBounds(float,float,float,float) -> a
    void setPosition(float,float) -> a
    void setColor$4098370b() -> a
    void setOrigin(float,float) -> b
    void rotate90$1385ff() -> b
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    float getWidth() -> c
    float getHeight() -> d
    void setRegion(float,float,float,float) -> b
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.g:
    com.badlogic.gdx.graphics.Mesh mesh -> a
    com.badlogic.gdx.graphics.Mesh[] buffers -> b
    com.badlogic.gdx.graphics.Texture lastTexture -> c
    float invTexWidth -> d
    float invTexHeight -> e
    int idx -> f
    int currBufferIdx -> g
    float[] vertices -> h
    com.badlogic.gdx.math.Matrix4 transformMatrix -> i
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> j
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> k
    boolean drawing -> l
    boolean blendingDisabled -> m
    int blendSrcFunc -> n
    int blendDstFunc -> o
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> p
    float color -> q
    com.badlogic.gdx.graphics.Color tempColor -> r
    int renderCalls -> s
    int maxSpritesInBatch -> t
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> u
    void begin() -> a
    void end() -> b
    void draw$4914df87(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> a
    void draw$1647d9c(com.badlogic.gdx.graphics.Texture,float[]) -> a
    void renderMesh() -> d
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> c
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.d:
    java.lang.String[] tuple -> a
    java.util.HashSet textures -> b
    java.util.ArrayList regions -> c
    java.util.Comparator indexComparator -> d
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> a
    java.lang.String readValue(java.io.BufferedReader) -> a
    void readTuple(java.io.BufferedReader) -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.f:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.a:
    int index -> a
    java.lang.String name -> b
    float offsetX -> c
    float offsetY -> d
    int packedWidth -> e
    int packedHeight -> f
    int originalWidth -> g
    int originalHeight -> h
    boolean rotate -> i
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.b:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> a
    void setPosition(float,float) -> a
    void setBounds(float,float,float,float) -> a
    void setOrigin(float,float) -> b
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.e:
    com.badlogic.gdx.graphics.Texture texture -> j
    float u -> k
    float v -> l
    float u2 -> m
    float v2 -> n
    void setRegion(float,float,float,float) -> b
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    com.badlogic.gdx.graphics.Texture getTexture() -> e
    int getRegionWidth() -> f
    int getRegionHeight() -> g
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.a.f:
    java.util.Map buffers -> a
    com.badlogic.gdx.graphics.Texture colorTexture -> b
    int framebufferHandle -> c
    int depthbufferHandle -> d
    int width -> e
    int height -> f
    com.badlogic.gdx.graphics.Pixmap$Format format -> g
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> a
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.a.c:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> f
    int getNumIndices() -> a
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> c
    void unbind() -> d
    void invalidate() -> e
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.a.g:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> f
    int getNumIndices() -> a
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> c
    void unbind() -> d
    void invalidate() -> e
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.a.i:
    int getNumIndices() -> a
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> c
    void unbind() -> d
    void invalidate() -> e
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.a.d:
    boolean pedantic -> a
    java.util.Map shaders -> b
    java.lang.String log -> c
    boolean isCompiled -> d
    com.badlogic.gdx.utils.ObjectMap uniforms -> e
    com.badlogic.gdx.utils.ObjectMap attributes -> f
    int program -> g
    int vertexShaderHandle -> h
    int fragmentShaderHandle -> i
    java.nio.FloatBuffer matrix -> j
    java.lang.String vertexShaderSource -> k
    java.lang.String fragmentShaderSource -> l
    boolean invalidated -> m
    java.nio.ByteBuffer buffer -> n
    java.nio.FloatBuffer floatBuffer -> o
    java.nio.IntBuffer intBuffer -> p
    void compileShaders(java.lang.String,java.lang.String) -> a
    int loadShader(int,java.lang.String) -> a
    java.lang.String getLog() -> a
    boolean isCompiled() -> b
    int fetchAttributeLocation(java.lang.String) -> d
    int fetchUniformLocation(java.lang.String) -> e
    void setUniformi$505cff1c(java.lang.String) -> a
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> a
    void begin() -> c
    void end() -> d
    void disableVertexAttribute(java.lang.String) -> b
    void enableVertexAttribute(java.lang.String) -> c
    void checkManaged() -> f
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> e
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.a.h:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> a
    void unbind() -> b
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.a.a:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    int createBufferObject() -> d
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> a
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind() -> b
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void invalidate() -> c
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.a.e:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> a
    void unbind() -> b
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.a.b:
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> a
    void unbind() -> b
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.b.c:
    float[] sin -> a
    float[] cos -> b
    int ATAN2_DIM -> c
    float INV_ATAN2_DIM_MINUS_1 -> d
    float[] atan2 -> e
    java.util.Random random -> f
    double BIG_ENOUGH_CEIL -> g
    float sinDeg(float) -> a
    float cosDeg(float) -> b
    int random$134621() -> a
    boolean isPowerOfTwo(int) -> a
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.b.a:
    float[] tmp -> b
    float[] val -> a
    com.badlogic.gdx.math.Quaternion quat -> c
    com.badlogic.gdx.math.Vector3 tmpV -> d
    com.badlogic.gdx.math.Vector3 l_vez -> e
    com.badlogic.gdx.math.Vector3 l_vex -> f
    com.badlogic.gdx.math.Vector3 l_vey -> g
    com.badlogic.gdx.math.Vector3 tmpVec -> h
    com.badlogic.gdx.math.Matrix4 tmpMat -> i
    com.badlogic.gdx.math.Vector3 right -> j
    com.badlogic.gdx.math.Vector3 tmpForward -> k
    com.badlogic.gdx.math.Vector3 tmpUp -> l
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    com.badlogic.gdx.math.Matrix4 set(float[]) -> a
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    com.badlogic.gdx.math.Matrix4 setToOrtho2D$7167aba2(float,float) -> a
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.b.e:
    com.badlogic.gdx.math.Quaternion tmp1 -> a
    com.badlogic.gdx.math.Quaternion tmp2 -> b
    float x -> c
    float y -> d
    float z -> e
    float w -> f
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.b.d:
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.b.f:
    float x -> a
    float y -> b
    float z -> c
    com.badlogic.gdx.math.Vector3 tmp -> d
    com.badlogic.gdx.math.Vector3 tmp2 -> e
    com.badlogic.gdx.math.Vector3 tmp3 -> f
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.b.b:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    void addValue(float) -> a
    float getMean() -> a
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.f:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> d
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.c:
    com.badlogic.gdx.utils.Array array -> b
    int index -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    void copy$154271e7(float[],java.nio.Buffer,int) -> a
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    java.nio.IntBuffer newIntBuffer$ba72910() -> a
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.a:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> b
    boolean isWindows -> c
    boolean isLinux -> d
    boolean isMac -> e
    boolean is64Bit -> f
    java.io.File nativesDir -> g
    java.lang.String crc(java.lang.String) -> a
    boolean loadLibrary(java.lang.String,java.lang.String) -> a
    java.lang.String extractLibrary(java.lang.String,java.lang.String) -> b
    void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.d:
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.b:
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void resize(int) -> a
    int hash2(long) -> a
    int hash3(long) -> b
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.e:
    int max -> a
    com.badlogic.gdx.utils.Array freeObjects -> b
    java.lang.Object newObject() -> a
    java.lang.Object obtain() -> b
    void free(java.lang.Object) -> a
com.eightbitmage.gdxlw.LibdgxWallpaperListener -> com.eightbitmage.gdxlw.b:
    void offsetChange$7b583feb(float) -> a
com.eightbitmage.gdxlw.LibdgxWallpaperService -> com.eightbitmage.gdxlw.LibdgxWallpaperService:
    java.lang.String TAG -> b
    com.eightbitmage.gdxlw.LibdgxWallpaperService$LibdgxWallpaperEngine previousEngine -> c
    boolean DEBUG -> a
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.eightbitmage.gdxlw.LibdgxWallpaperService$LibdgxWallpaperEngine access$0(com.eightbitmage.gdxlw.LibdgxWallpaperService) -> a
    void access$1(com.eightbitmage.gdxlw.LibdgxWallpaperService,com.eightbitmage.gdxlw.LibdgxWallpaperService$LibdgxWallpaperEngine) -> a
com.eightbitmage.gdxlw.LibdgxWallpaperService$LibdgxWallpaperEngine -> com.eightbitmage.gdxlw.a:
    com.badlogic.gdx.backends.android.livewallpaper.AndroidApplicationLW app -> a
    com.eightbitmage.gdxlw.LibdgxWallpaperListener wallpaperListener -> b
    com.badlogic.gdx.backends.android.livewallpaper.surfaceview.GLBaseSurfaceView view -> c
    com.eightbitmage.gdxlw.LibdgxWallpaperService this$0 -> d
    void initialize(com.badlogic.gdx.backends.android.livewallpaper.AndroidApplicationLW) -> a
    void setWallpaperListener(com.eightbitmage.gdxlw.LibdgxWallpaperListener) -> a
    android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onDestroy() -> onDestroy
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
com.pandacoder.MireaWallpaper.Shapes.Ring -> com.pandacoder.MireaWallpaper.a.a:
    float[] quoteCircleCoord -> a
    float[] vertices -> b
    com.badlogic.gdx.graphics.Texture texture -> c
    com.badlogic.gdx.graphics.Mesh diskMesh -> d
    float[] color -> e
    float x -> f
    float y -> g
    float thickness -> h
    float radius -> i
    boolean dirtyVertices -> j
    float[] deformationMatrix -> k
    void init() -> c
    void setDeformation(float) -> a
    void setTexture(com.badlogic.gdx.graphics.Texture) -> a
    void setColor$13462e() -> a
    void setParams(float,float,float,float) -> a
    void draw() -> b
com.pandacoder.MireaWallpaper.Utils.CirclesList -> com.pandacoder.MireaWallpaper.b.e:
com.pandacoder.MireaWallpaper.Utils.CirclesList$MyCircle -> com.pandacoder.MireaWallpaper.b.d:
    float radius -> a
com.pandacoder.MireaWallpaper.Utils.RingTexureBank -> com.pandacoder.MireaWallpaper.b.a:
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures[] borderTexturesCache -> a
    void regenerateTextures() -> a
    com.badlogic.gdx.graphics.Texture get(float) -> a
    com.badlogic.gdx.graphics.Texture generateTexture(int,com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType) -> a
com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures -> com.pandacoder.MireaWallpaper.b.c:
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures upto10 -> a
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures upto20 -> b
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures upto30 -> c
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures upto45 -> d
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures upto60 -> e
    com.badlogic.gdx.graphics.Texture texture -> f
    int size2power -> g
    int validWidth -> h
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType borderType -> i
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures[] ENUM$VALUES -> j
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures[] values() -> values
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures valueOf(java.lang.String) -> valueOf
    int access$2(com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures) -> a
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType access$3(com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures) -> b
    void access$4(com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures,com.badlogic.gdx.graphics.Texture) -> a
    com.badlogic.gdx.graphics.Texture access$5(com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures) -> c
    int access$6(com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderTextures) -> d
com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType -> com.pandacoder.MireaWallpaper.b.b:
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType BASE -> a
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType TRANSIENT -> b
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType[] ENUM$VALUES -> c
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType[] values() -> values
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank$BorderType valueOf(java.lang.String) -> valueOf
com.pandacoder.MireaWallpaper.Wallpaper -> com.pandacoder.MireaWallpaper.Wallpaper:
    android.view.Display mDisplay -> b
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    int access$0(com.pandacoder.MireaWallpaper.Wallpaper) -> a
com.pandacoder.MireaWallpaper.Wallpaper$MireaWallpaperEngine -> com.pandacoder.MireaWallpaper.a:
    com.pandacoder.MireaWallpaper.Wallpaper this$0 -> a
    void initialize(com.badlogic.gdx.backends.android.livewallpaper.AndroidApplicationLW) -> a
    void onDestroy() -> onDestroy
com.pandacoder.MireaWallpaper.WallpaperGraphicsEngine -> com.pandacoder.MireaWallpaper.b:
    com.pandacoder.MireaWallpaper.Wallpaper$MireaWallpaperEngine engine -> a
    android.content.Context appContext -> b
    com.badlogic.gdx.graphics.Texture mBg -> c
    com.badlogic.gdx.graphics.g2d.Sprite mMireaLettering -> d
    com.badlogic.gdx.graphics.g2d.SpriteBatch mBatch -> e
    com.pandacoder.MireaWallpaper.Shapes.Ring mRing -> f
    com.pandacoder.MireaWallpaper.Utils.RingTexureBank ringTextures -> g
    int mWidth -> h
    int mHeight -> i
    float mOffsetX -> j
    float mRingCenterX -> k
    float mRingCenterY -> l
    float mCircleMinThickness -> m
    float mCircleBorderRadius -> n
    float mPixelScaleCoef -> o
    com.pandacoder.MireaWallpaper.Utils.CirclesList mActiveCircles -> p
    com.pandacoder.MireaWallpaper.Utils.CirclesList mInactiveCircles -> q
    float maxCircleRadius -> r
    void create() -> a
    void render() -> c
    void UpdateDimentions() -> f
    void UpdateMireaLetteringParams() -> g
    void offsetChange$7b583feb(float) -> a
    void resize$255f295() -> d
    void resume() -> b
    void reloadTextures() -> h
    void saveEngineState() -> e
